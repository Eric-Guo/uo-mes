//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UO_Service.Resx {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MSG {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MSG() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UO_Service.Resx.MSG", typeof(MSG).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container is currently hold, hold count: {0}.
        /// </summary>
        internal static string Container_Is_Hold {
            get {
                return ResourceManager.GetString("Container_Is_Hold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container is needed to complete this service.
        /// </summary>
        internal static string Container_Is_Need {
            get {
                return ResourceManager.GetString("Container_Is_Need", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success, Container {0} HoldCount is now {1}..
        /// </summary>
        internal static string Hold_Success {
            get {
                return ResourceManager.GetString("Hold_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CDO {1}: object {0} not found in MES.
        /// </summary>
        internal static string Object_not_found {
            get {
                return ResourceManager.GetString("Object_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Employee: {0} does not exist in MES, check if the employee is added or if the employee is not allowed (LockOut or not Approved yet) to use MES, if employee is exist in DB, please check capital and domain.
        ///By default, domain name will be used as part of Employee name, if you want to ignore the domain info, add trimDomainName=&quot;true&quot; in Web.config profile section..
        /// </summary>
        internal static string ProfileProvider_Employee_Not_Exist {
            get {
                return ResourceManager.GetString("ProfileProvider_Employee_Not_Exist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container {0} Release is Completed.
        /// </summary>
        internal static string Release_Success {
            get {
                return ResourceManager.GetString("Release_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource is needed to complete this service.
        /// </summary>
        internal static string Resource_Is_Need {
            get {
                return ResourceManager.GetString("Resource_Is_Need", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service execution is successful!.
        /// </summary>
        internal static string Service_Success {
            get {
                return ResourceManager.GetString("Service_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MES SiteMap root node not exist in DB, which normally means MES basic initial data is not imported, import the MES basic initial data first..
        /// </summary>
        internal static string SiteMap_Root_Not_Fould {
            get {
                return ResourceManager.GetString("SiteMap_Root_Not_Fould", resourceCulture);
            }
        }
    }
}
