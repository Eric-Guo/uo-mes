<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChildContainerLevel" xml:space="preserve">
    <value>子批次层次</value>
  </data>
  <data name="ChildContainerName" xml:space="preserve">
    <value>子批次名称</value>
  </data>
  <data name="ChildQty" xml:space="preserve">
    <value>子批数量</value>
  </data>
  <data name="ChildUOM" xml:space="preserve">
    <value>子单位</value>
  </data>
  <data name="CloseWhenEmpty" xml:space="preserve">
    <value>若批次已空，关闭批次</value>
  </data>
  <data name="CombineAllQty" xml:space="preserve">
    <value>合并所有数量</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="CompleteMessage" xml:space="preserve">
    <value>完成信息</value>
  </data>
  <data name="Container" xml:space="preserve">
    <value>批次</value>
  </data>
  <data name="ContainerInfo" xml:space="preserve">
    <value>批次信息</value>
  </data>
  <data name="ContainerLevel" xml:space="preserve">
    <value>批次层次</value>
  </data>
  <data name="ContainerName" xml:space="preserve">
    <value>批次名称</value>
  </data>
  <data name="ContainerStatus" xml:space="preserve">
    <value>批次状态</value>
  </data>
  <data name="ContainerStep" xml:space="preserve">
    <value>批次所在工步</value>
  </data>
  <data name="DefectQty" xml:space="preserve">
    <value>瑕疵数量</value>
  </data>
  <data name="DefectReason" xml:space="preserve">
    <value>瑕疵原因</value>
  </data>
  <data name="DisassociateAll" xml:space="preserve">
    <value>分离所有子批次</value>
  </data>
  <data name="DueDate" xml:space="preserve">
    <value>到期日</value>
  </data>
  <data name="Factory" xml:space="preserve">
    <value>工厂</value>
  </data>
  <data name="FromContainerName" xml:space="preserve">
    <value>来源批次名称</value>
  </data>
  <data name="HoldReason" xml:space="preserve">
    <value>扣留原因</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="LastStatusChangeDate" xml:space="preserve">
    <value>上次状态改变时间</value>
  </data>
  <data name="MfgOrder" xml:space="preserve">
    <value>生产订单</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>工艺</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>产品</value>
  </data>
  <data name="Qty" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="QtyInspected" xml:space="preserve">
    <value>已检查数量</value>
  </data>
  <data name="ReleaseReason" xml:space="preserve">
    <value>释出原因</value>
  </data>
  <data name="Resource" xml:space="preserve">
    <value>资源</value>
  </data>
  <data name="ResourceInfo" xml:space="preserve">
    <value>资源信息</value>
  </data>
  <data name="ResourceStatus" xml:space="preserve">
    <value>资源状态</value>
  </data>
  <data name="ResourceStatusReason" xml:space="preserve">
    <value>资源状态更改原因</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="StyleTheme" xml:space="preserve">
    <value>界面主题</value>
  </data>
  <data name="ThruputAllQty" xml:space="preserve">
    <value>记录所有数量</value>
  </data>
  <data name="UOM" xml:space="preserve">
    <value>单位</value>
  </data>
  <data name="WorkCenter" xml:space="preserve">
    <value>工作中心</value>
  </data>
  <data name="Workflow" xml:space="preserve">
    <value>流程</value>
  </data>
  <data name="WorkflowStep" xml:space="preserve">
    <value>流程步</value>
  </data>
</root>